{"version":3,"sources":["site/colors.js","business-logic/apiIsLoaded.js","framework/logic/gherkin.js","business-logic/actions.js","framework/logic/fetchJson.js","site/api.js","business-logic/appIsLoaded.js","framework/components/GenreFilter/GenreFilterItem.jsx","framework/components/Film/Film.jsx","framework/components/AsyncComponent/AsyncComponentFactory.jsx","framework/components/Film/FilmList.jsx","framework/components/FilterContainer/FilterContainer.jsx","framework/components/Title/Title.jsx","framework/components/GenreFilter/GenreFilter.jsx","framework/components/VoteFilter/VoteFilter.jsx","framework/components/index.js","business-logic/genreFilterClicked.js","business-logic/voteFilterClicked.js","business-logic/initial-store.js","site/routes.js","business-logic/index.js","serviceWorker.js","index.js","site/store.js"],"names":["__webpack_require__","d","__webpack_exports__","electricPurple","jadeGreen","API_IS_LOADED","initApiIsLoaded","genres","nowPlaying","results","given","when","then","state","action","Object","_WS_zone_movie_listing_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","length","actionTypes","Array","_key","_len2","callbacks","_key2","undefined","indexOf","type","reduce","newState","callback","GENRE_FILTER_CLICKED","VOTE_FILTER_CLICKED","_appIsLoaded__WEBPACK_IMPORTED_MODULE_0__","fetchJson","url","fetch","method","mode","r","json","getNowPlaying","getImage","getGenres","API_KEY","concat","img","APP_IS_LOADED","inputCalls","Promise","all","_ref","_ref2","_WS_zone_movie_listing_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dispatch","GenreItem","styled","div","_templateObject","props","withCheckbox","connect","onClick","id","value","className","genre","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","onChange","event","target","checked","htmlFor","name","FilmImage","src","FilmTitle","_templateObject2","FilmGenreList","_templateObject3","genre_ids","_ref$genreList","genreList","title","poster_path","filter","map","_GenreFilter_GenreFilterItem__WEBPACK_IMPORTED_MODULE_4__","key","_templateObject4","AsyncComponentFactory","componentImportCallback","Loadable","loader","loading","isLoading","error","react_default","AsyncFilm","resolve","bind","filterByGenre","selectedGenres","film","some","parseInt","filterByVote","selectedVote","vote_average","_ref$apiIsLoaded","apiIsLoaded","genreFilterClicked","voteFilterClicked","keys","k","acc","fn","assign","FilterContainer_templateObject","Title","h1","Title_templateObject","h2","h3","GenreFilterItem","GenreFilter_templateObject","votingItemStyle","VoteItem","VoteFilter_templateObject","VoteClear","VoteFilter_templateObject2","vote","readOnly","hidden","VoteFilter_templateObject3","AsyncComponent_AsyncComponentFactory","Film_FilmList","FilterContainer","components_GenreFilter_GenreFilter","components_VoteFilter_VoteFilter","objectSpread","defineProperty","initial_store","AsyncHome","e","appIsLoaded","childProps","react_router_dom","react_router","path","exact","component","combineReducers","Boolean","window","location","hostname","match","ReactDOM","render","es","store","initialState","createStore","rootReducer","configureStore","initialStore","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31698ad5.chunk.js","sourcesContent":["export const electricPurple = '#6936FB';\nexport const jadeGreen = '#45E5B7';\n","import given from '../framework/logic/gherkin';\n\nexport const API_IS_LOADED = 'API_IS_LOADED';\nexport const initApiIsLoaded = {\n  genres: [],\n  nowPlaying: {\n    results: [],\n  },\n};\n\nconst storeApiInput = (state, action) => ({\n  ...state,\n  ...action.genres,\n  nowPlaying: action.nowPlaying,\n});\n\nexport default given\n  .when(API_IS_LOADED)\n  .then(storeApiInput);\n","export default {\n  when: (...actionTypes) => ({\n    then: (...callbacks) =>\n      (state = {}, action = {}) => (\n        actionTypes.indexOf(action.type) !== -1\n          ? callbacks.reduce((newState, callback) => callback(newState, action), state)\n          : state\n      ),\n  }),\n};\n","export { APP_IS_LOADED } from './appIsLoaded';\nexport { API_IS_LOADED } from './apiIsLoaded';\nexport const GENRE_FILTER_CLICKED = 'GENRE_FILTER_CLICKED';\nexport const VOTE_FILTER_CLICKED = 'VOTE_FILTER_CLICKED';\n","const fetchJson = url => fetch(url, {\n  method: 'GET',\n  mode: 'cors',\n}).then(r => r.json());\n\nexport default fetchJson;\n","import fetchJson from '../framework/logic/fetchJson';\n\nconst API_KEY = '9e77e8e8b03b6f122f96eacc1da8bc10';\n\nexport function getNowPlaying() {\n  return fetchJson(`https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`);\n}\n\nexport function getImage(img) {\n  return `https://image.tmdb.org/t/p/w200${img}`;\n}\n\nexport function getGenres() {\n  return fetchJson(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`);\n}\n","import given from '../framework/logic/gherkin';\nimport { getGenres, getNowPlaying } from '../site/api';\n\nimport { API_IS_LOADED } from './apiIsLoaded';\n\nexport const APP_IS_LOADED = 'APP_IS_LOADED';\n\nlet inputCalls = 0;\n\nfunction getApiInput(state, action) {\n  if (inputCalls) return state;\n  inputCalls++;\n\n  Promise.all([getGenres(), getNowPlaying()])\n    .then(([genres, nowPlaying]) =>\n      action.dispatch({\n        type: API_IS_LOADED,\n        genres,\n        nowPlaying,\n      })\n    );\n\n  return state;\n}\n\nexport default given\n  .when(APP_IS_LOADED)\n  .then(getApiInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport { GENRE_FILTER_CLICKED } from \"../../../business-logic/actions\";\nimport {electricPurple} from '../../../site/colors'\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: (id, value) => dispatch({ type: GENRE_FILTER_CLICKED, id, value })\n});\n\nconst GenreItem = styled.div`\n  border: 0;\n  background: transparent;\n  display: block;\n  margin: 1px 1px;\n  flex: 1 1 12%;\n  white-space: pre;\n  cursor: pointer;\n  text-align: center;\n  break-inside: avoid;\n\n  label {\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    border-radius: 4px;\n    ${props =>\n      props.withCheckbox\n        ? 'justify-content: start;'\n        : 'justify-content: center;'}\n\n    & > * {\n      flex: 1 1 10px;\n    }\n  }\n\n  input,\n  label {\n    cursor: pointer;\n  }\n\n  input {\n    opacity: 0;\n    position: absolute;\n    z-index: -1;\n  }\n\n  ${props =>\n    props.withCheckbox &&\n  `\n    input ~ label:before {\n      display: block;\n      content: \"☐ \";\n    }\n\n    &:not(:hover) input:checked ~ label {\n      background: ${electricPurple};\n      color: white;\n    }\n\n    input:checked ~ label:before {\n      content: \"☑ \";\n    }\n  `}\n\n  &:hover label {\n    background: #fdd803;\n    color: black;\n  }\n`;\n\nconst GenreFilterItem = ({ className, genre, onClick, withCheckbox }) => (\n  <GenreItem withCheckbox={withCheckbox} className={className}>\n    {withCheckbox && (\n      <input\n        id={`GenreFilterItem-${genre.id}`}\n        type=\"checkbox\"\n        onChange={event => onClick(genre.id, event.target.checked)}\n      />\n    )}\n    <label className={!withCheckbox && 'text-small'} htmlFor={`GenreFilterItem-${genre.id}`}>\n      {genre.name}\n    </label>\n  </GenreItem>\n);\n\nexport default connect(null, mapDispatchToProps)(GenreFilterItem);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { getImage } from '../../../site/api';\nimport GenreFilterItem from '../GenreFilter/GenreFilterItem';\n\nconst FilmImage = styled.div`\n  width: 160px;\n  height: 256px;\n  box-shadow: 0 0.3em 0.7em -0.3em black;\n  margin: 0 auto 20px;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  background: ${props =>\n      props.src ? `url(${getImage(props.src)})` : \"lightgrey\"}\n    no-repeat center center;\n  background-size: cover;\n`;\n\nconst FilmTitle = styled.div`\n  font-weight: bold;\n`;\n\nconst FilmGenreList = styled.div`\n  margin-top: 10px;\n  padding-top: 5px;\n  box-shadow: 0 -11px 0 -10px lightgrey;\n  color: grey;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Film = ({ className, genre_ids, genreList = [], title, poster_path }) => (\n  <div className={className}>\n    <FilmImage src={poster_path} />\n    <FilmTitle>{title}</FilmTitle>\n    <FilmGenreList>\n      {genreList\n        .filter(genre => genre_ids.indexOf(genre.id) !== -1)\n        .map(genre => <GenreFilterItem key={genre.id} genre={genre} />)}\n    </FilmGenreList>\n  </div>\n);\n\nFilm.propTypes = {\n  adult: PropTypes.bool,\n  className: PropTypes.string,\n  backdrop_path: PropTypes.string,\n  genre_ids: PropTypes.arrayOf(PropTypes.number),\n  genreList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n  })),\n  id: PropTypes.number,\n  original_language: PropTypes.string,\n  original_title: PropTypes.string,\n  overview: PropTypes.string,\n  popularity: PropTypes.number,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n  title: PropTypes.string,\n  video: PropTypes.bool,\n  vote_average: PropTypes.number,\n  vote_count: PropTypes.number\n};\n\nexport default styled(Film)`\n  height: 350px;\n  margin: 0 auto 32px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  text-align: center;\n  break-inside: avoid;\n`;\n","import React from 'react';\nimport Loadable from \"react-loadable\";\n\nfunction AsyncComponentFactory(componentImportCallback) {\n  return Loadable({\n    loader: componentImportCallback,\n    loading: ({ isLoading, error }) =>\n      (isLoading && <span>Loading...</span>) ||\n      (error && <span>Component load failed</span>) ||\n      null\n  });\n}\n\nexport default AsyncComponentFactory;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport AsyncComponentFactory from \"../AsyncComponent/AsyncComponentFactory\";\n\nconst AsyncFilm = new AsyncComponentFactory(() => import(\"./Film\"));\n\nconst filterByGenre = selectedGenres => results =>\n  selectedGenres.length\n    ? results.filter(film =>\n        selectedGenres.some(\n          genre => film.genre_ids.indexOf(parseInt(genre, 0)) !== -1\n        )\n      )\n    : results;\n\nconst filterByVote = selectedVote => results =>\n  selectedVote\n    ? results.filter(film => film.vote_average / 2 >= selectedVote)\n    : results;\n\n\nconst mapStateToProps = ({\n  apiIsLoaded: { genres, nowPlaying },\n  genreFilterClicked,\n  voteFilterClicked: { selectedVote }\n}) => ({\n  genres,\n  nowPlaying,\n  selectedGenres: Object.keys(genreFilterClicked)\n    .filter(k => genreFilterClicked[k]),\n  selectedVote\n});\n\nconst FilmList = ({\n  className,\n  genres,\n  nowPlaying: { results },\n  selectedGenres,\n  selectedVote\n}) => (\n  <div className={className}>\n    {[\n      filterByVote(selectedVote),\n      filterByGenre(selectedGenres),\n    ].reduce((acc, fn) => fn(acc), results)\n      .map(film => (\n        <AsyncFilm key={film.id} {...film} genreList={genres} />\n      ))}\n  </div>\n);\n\nexport default connect(mapStateToProps)(styled(FilmList)`\n  columns: 5 200px;\n  z-index: -1;\n`);\n","import styled from \"styled-components\";\nimport { electricPurple } from \"../../../site/colors\";\n\nexport default styled.div`\n  padding: 30px 30px 20px;\n  border: 2px solid ${electricPurple};\n  border-radius: 25px;\n  margin: 0 0 40px;\n`;\n","import styled from \"styled-components\";\nimport { electricPurple, jadeGreen } from \"../../../site/colors\";\n\nexport default {\n  h1: styled.h1`\n    color: ${jadeGreen};\n    text-transform: uppercase;\n    white-space: pre;\n  `,\n  h2: styled.h2`\n    color: ${electricPurple};\n    text-transform: uppercase;\n    margin: 10px 0 0;\n    white-space: pre;\n  `,\n  h3: styled.h3`\n    color: ${jadeGreen};\n    margin: 20px 0 0;\n    white-space: pre;\n  `\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport Title from '../Title/Title';\n\nimport GenreFilterItem from './GenreFilterItem';\n\nconst mapStateToProps = ({ apiIsLoaded: { genres } }) => ({\n  genres,\n});\n\nconst GenreFilter = ({ className, genres, onClick }) => (\n  <div>\n    <Title.h3>Filter by genre: </Title.h3>\n    <div className={className}>\n      {genres.map(genre => (\n        <GenreFilterItem withCheckbox key={genre.id} genre={genre} />\n      ))}\n    </div>\n  </div>\n);\n\nexport default connect(mapStateToProps)(styled(GenreFilter)`\n  width: 100%;\n  columns: 150px;\n  margin: 10px 0 10px;\n`);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { VOTE_FILTER_CLICKED } from \"../../../business-logic/actions\";\nimport {electricPurple} from '../../../site/colors';\n\nimport Title from \"../Title/Title\";\n\nconst mapStateToProps = ({ voteFilterClicked: { selectedVote } }) => ({\n  selectedVote\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: vote => dispatch({ type: VOTE_FILTER_CLICKED, vote })\n});\n\nconst votingItemStyle = `\n  flex: 1 1 15px;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 4px;\n\n  input,\n  label {\n    cursor: pointer;\n  }\n\n  &:hover {\n    background: ${electricPurple};\n    color: white;\n  }\n`;\n\nconst VoteItem = styled.div`\n  ${votingItemStyle}\n\n  input {\n    opacity: 0;\n    position: absolute;\n    z-index: -1;\n  }\n\n  input ~ label:before {\n    content: \"☆\";\n  }\n\n  &:hover {\n    color: #fdd803;\n\n    & label:before {\n      content: \"★\";\n    }\n  }\n\n  input:checked ~ label:before {\n    content: \"★\";\n  }\n`;\n\nconst VoteClear = styled.div`\n  ${votingItemStyle}\n`;\n\nconst VoteFilter = ({ className, onClick, selectedVote }) => (\n  <div>\n    <Title.h3>Filter by vote: </Title.h3>{\" \"}\n    <div className={className}>\n      <VoteClear>\n        <input\n          id=\"VoteItem-0\"\n          type=\"radio\"\n          onClick={() => onClick(0)}\n          checked={selectedVote >= 0}\n          readOnly\n          hidden\n        />\n        <label htmlFor=\"VoteItem-0\">Clear</label>\n      </VoteClear>\n      {[1, 2, 3, 4, 5].map(k => (\n        <VoteItem key={k}>\n          <input\n            id={`VoteItem-${k}`}\n            type=\"radio\"\n            onClick={() => onClick(k)}\n            checked={selectedVote >= k}\n            readOnly\n          />\n          <label htmlFor={`VoteItem-${k}`} />\n        </VoteItem>\n      ))}\n    </div>\n  </div>\n);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(styled(VoteFilter)`\n  display: inline-flex;\n  margin: 10px;\n  justify-content: center;\n  align-items: center;\n  max-width: 220px;\n`);\n","export { default as AsyncComponentFactory } from './AsyncComponent/AsyncComponentFactory';\nexport { default as Film } from './Film/Film';\nexport { default as FilmList } from './Film/FilmList';\nexport { default as FilterContainer } from './FilterContainer/FilterContainer';\nexport { default as GenreFilter } from './GenreFilter/GenreFilter';\nexport { default as Title } from './Title/Title';\nexport { default as VoteFilter } from './VoteFilter/VoteFilter';\n","import given from '../framework/logic/gherkin';\n\nexport const GENRE_FILTER_CLICKED = 'GENRE_FILTER_CLICKED';\nexport const initGenreFilterClicked = {};\n\nconst storeGenreSelectionChange = (state, action) => ({\n  ...state,\n  ...{\n    [action.id]: action.value,\n  },\n});\n\nexport default given\n  .when(GENRE_FILTER_CLICKED)\n  .then(storeGenreSelectionChange);\n","import given from '../framework/logic/gherkin';\n\nexport const VOTE_FILTER_CLICKED = 'VOTE_FILTER_CLICKED';\nexport const initVoteFilterClicked = {\n  selectedVote: 0,\n};\n\nconst storeApiInput = (state, action) => ({\n  ...state,\n  selectedVote: action.vote,\n});\n\nexport default given\n  .when(VOTE_FILTER_CLICKED)\n  .then(storeApiInput);\n","import { initApiIsLoaded } from './apiIsLoaded';\nimport { initGenreFilterClicked } from './genreFilterClicked';\nimport { initVoteFilterClicked } from './voteFilterClicked';\n\nexport default {\n  apiIsLoaded: initApiIsLoaded,\n  genreFilterClicked: initGenreFilterClicked,\n  voteFilterClicked: initVoteFilterClicked,\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { APP_IS_LOADED } from '../business-logic/actions'\n\nimport { AsyncComponentFactory } from '../framework/components';\n\nconst AsyncHome = new AsyncComponentFactory(() => import('../pages/Home'));\n\nconst mapDispatchToProps = dispatch => ({\n  appIsLoaded: () => dispatch({ type: APP_IS_LOADED, dispatch }),\n});\n\nconst AppRouter = ({ appIsLoaded, childProps }) => appIsLoaded() && (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={AsyncHome} props={childProps} />\n      <Route component={AsyncHome} />\n    </Switch>\n  </Router>\n);\n\nexport default connect(null, mapDispatchToProps)(AppRouter);","import { combineReducers } from 'redux';\n\nimport apiIsLoaded from './apiIsLoaded';\nimport appIsLoaded from './appIsLoaded';\nimport genreFilterClicked from './genreFilterClicked';\nimport voteFilterClicked from './voteFilterClicked';\n\nexport default combineReducers({\n  apiIsLoaded,\n  appIsLoaded,\n  genreFilterClicked,\n  voteFilterClicked\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n\nimport initialStore from './business-logic/initial-store';\nimport App from './site/routes';\nimport configureStore from './site/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={configureStore(initialStore)}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from 'redux';\n\nimport rootReducer from '../business-logic';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState\n  );\n}\n"],"sourceRoot":""}